fs=require("fs");const system={args:process.argv.slice(1),exit:process.exit,readFile:r=>fs.readFileSync(r,{encoding:"utf8"}),writeFile(r,e){fs.writeFileSync(r,e,{encoding:"utf8"})}};Object.groupBy??=function(r,e){return r.reduce(((r,t,s)=>{const o=e(t,s);return r[o]=[...r[o]??[],t],r}),{})},Array.prototype.flat??=function r(e=1){return e?Array.prototype.reduce.call(this,(function(t,s){return Array.isArray(s)?t.push.apply(t,r.call(s,e-1)):t.push(s),t}),[]):Array.prototype.slice.call(this)},Array.prototype.flatMap??=function(r,e){return Array.prototype.map.call(this,r,e).flat()},console.log(system.args);