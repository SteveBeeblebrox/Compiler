#!/home/siana/.nvm/versions/node/v21.5.0/bin/node
var _a,_b,_c,_d,_e;fs=require("fs");const system={args:process.argv.slice(1),open:fs.open,exit:process.exit,readFile:t=>fs.readFileSync(t,{encoding:"utf8"}),writeFile(t,n){fs.writeFileSync(t,n,{encoding:"utf8"})}};function readNFA(t){var n;const e={transitions:[]};let i=!0;const s=system.readFile(t);if(!s)throw new Error(`${t} is empty`);for(const t of s.split("\n").map((t=>t.replace("\r","")))){if(t.startsWith("#")||!t.trim())continue;const s=t.split(" ").filter((t=>t));if(i){const[t,n,...i]=s;e.numStates=+t,e.lambdaChar=n,e.alphabet=i}else{const[t,i,o,...r]=s;null===(n=e.transitions)||void 0===n||n.push({isAccepting:"+"===t,from:+i,to:+o,characters:r})}i=!1}return e}function writeDFA(t,n){const e=n.states.map((t=>`${t.isAccepting?"+":"-"} ${t.id} ${t.transitions.map((t=>null!=t?t:"E")).join(" ")}`)).join("\n");system.writeFile(t,e)}function toDFA(t){function n(n){n=new Set(n);const e=[...n];for(;e.length;){const i=e.pop();for(const s of t.transitions.flatMap((n=>n.characters.includes(t.lambdaChar)&&n.from==i?[n.to]:[])))n.has(s)||(n.add(s),e.push(s))}return[...n]}function e(n,e){const i=new Set;for(const s of e)for(const e of t.transitions.flatMap((t=>t.characters.includes(n)&&t.from==s?[t.to]:[])))i.add(e);return[...i]}const i=(t,n)=>[...new Set(t.filter((t=>n.includes(t))))],s=function(){const t=new Map;let n=0;return function(e){const i=[...e].sort().join(",");return t.has(i)||t.set(i,n++),t.get(i)}}();function o(n,e){n[e]={id:e,isStart:!1,isAccepting:!1,transitions:new Array(t.alphabet.length)}}const r={alphabet:t.alphabet,states:[]},c=r.states,a=[],l=[...new Set(t.transitions.flatMap((t=>t.isAccepting?[t.from]:[])))],f=n([0]);o(c,s(f)),c[s(f)].isStart=!0,i(l,f).length&&(c[s(f)].isAccepting=!0),a.push(f);do{const r=a.pop();for(const f of t.alphabet){const p=n(e(f,r));c[s(r)].transitions[t.alphabet.indexOf(f)]=p.length?s(p):null,p.length&&!c[s(p)]&&(o(c,s(p)),i(l,p).length&&(c[s(p)].isAccepting=!0),a.push(p))}}while(a.length);return r}function optimizeDFA(t){const n=t.states;function e(){const e=new Set,i=[];i.push([n.filter((t=>t.isAccepting)),[...t.alphabet]]),i.push([n.filter((t=>!t.isAccepting)),[...t.alphabet]]);do{const[n,s]=i.pop(),o=s.shift(),r=Object.values(Object.groupBy(n,(n=>{var e;return null!==(e=n.transitions[t.alphabet.indexOf(o)])&&void 0!==e?e:"E"})));for(const t of r.filter((t=>t.length>1)))s.length?i.push([t,[...s]]):e.add(t)}while(i.length);for(const t of e){const e=t.shift(),i=t.map((t=>(e.isAccepting||(e.isAccepting=t.isAccepting),n.splice(n.indexOf(t),1),t.id)));for(const t of n)t.transitions=t.transitions.map((t=>null!==t&&i.includes(t)?e.id:t))}}let i;!function(){var t;const e=new Set,i=new Map(n.map((t=>[t.id,n.filter((n=>n.transitions.includes(t.id)))]))),s=n.filter((t=>t.isAccepting));for(;s.length;){const n=s.pop();if(!e.has(n.id)){for(const e of null!==(t=i.get(n.id))&&void 0!==t?t:[])s.push(e);e.add(n.id)}}const o=new Set;for(let t=0;t<n.length;void 0)e.has(n[t].id)?t++:(o.add(n[t].id),n.splice(t,1));for(const t of n)t.transitions=t.transitions.map((t=>null!==t&&o.has(t)?null:t))}();do{i=n.length,e()}while(i!=n.length);const s=n.reduce(((t,n)=>(t[n.id]=n.id,t)),[]).reduce(((t,n)=>[...t,n]),[]);for(const t of n)t.id=s.indexOf(t.id),t.transitions=t.transitions.map((t=>null!=t?s.indexOf(t):t));return t}function testToken(t,n){function e(...t){console.log(`OUTPUT ${t.join(" ")}`)}let i=0,s=0;const o=n.states;for(;s<=t.length;){if(o[i].isAccepting&&s===t.length)return e(":M:");const r=o[i].transitions[n.alphabet.indexOf(t.charAt(s++))];if(null===r)return e(s);i=r}return e(""===t?0:s)}null!==(_a=Object.groupBy)&&void 0!==_a||(Object.groupBy=function(t,n){return t.reduce(((t,e,i)=>{var s;const o=n(e,i);return t[o]=[...null!==(s=t[o])&&void 0!==s?s:[],e],t}),{})}),null!==(_b=(_d=Array.prototype).flat)&&void 0!==_b||(_d.flat=function t(n=1){return n?Array.prototype.reduce.call(this,(function(e,i){return Array.isArray(i)?e.push.apply(e,t.call(i,n-1)):e.push(i),e}),[]):Array.prototype.slice.call(this)}),null!==(_c=(_e=Array.prototype).flatMap)&&void 0!==_c||(_e.flatMap=function(t,n){return Array.prototype.map.call(this,t,n).flat()});const DO_OPTIMIZE=!0;!function(){try{const[t,n,...e]=system.args.slice(1),i=readNFA(t),s=optimizeDFA(toDFA(i));writeDFA(n,s);for(const t of e)testToken(t,s)}catch(t){console.error(t),system.exit(1)}}();